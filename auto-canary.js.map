{"version":3,"sources":["webpack:///./docs/pages/auto-canary.md"],"names":["_interopRequireDefault","__webpack_require__","_react","_interopRequireWildcard","lazyComponent","provider","_class","_temp","React","Component","[object Object]","args","super","_defineProperty","this","Comp","componentDidMount","state","props","shouldLoad","then","c","setState","default","render","createElement","children","e","bind","_jsx","className","_ref3"],"mappings":"2JAEMA,EAAAC,EAAA,UACAC,ySAAAC,CAAAF,EAAA,IACAD,EAAAC,EAAA,IAgGFD,EAAAC,EAAA,6lBA+CF,MAAMG,EAAgBC,IAAQ,IAAAC,EAAAC,EAAA,OAAAA,EAAAD,EAC5B,cAAcE,UAAMC,UAAUC,eAAAC,GAAAC,SAAAD,GAAAE,EAAAC,KAAA,QAKpB,CACNC,KAAM,OAGRC,qBACOF,KAAKG,MAAMF,MAAQD,KAAKI,MAAMC,YACjCd,IAAWe,KAAKC,IACdP,KAAKQ,SAAS,CACZP,KAAMM,EAAEE,YAMhBC,SACE,MAAMT,KAAEA,GAASD,KAAKG,MACtB,OAAOF,EAAOP,UAAMiB,cAAcV,EAAMD,KAAKI,MAAOJ,KAAKI,MAAMQ,UAAY,MAAQ,OAtB3Db,EAAAP,EAAA,eAEJ,CACpBa,YAAY,IAHYZ,GA2BbH,EAAc,IAAMH,EAAA0B,EAAA,IAAAP,KAAAnB,EAAA2B,KAAA,WACdxB,EAAc,IAAMH,EAAA0B,EAAA,IAAAP,KAAAnB,EAAA2B,KAAA,iBAKrCC,EAAA,oBACEA,EAAA,eAAIA,EAAA,iCACdA,EAAA,sFAAwEA,EAAA,2BAAxE,6DACAA,EAAA,eACAA,EAAA,qEACAA,EAAA,iDAEAA,EAAA,gBAAKA,EAAA,QAAMC,UAAU,sBAAhB,qBAAmDD,EAAA,SAAMA,EAAA,SAAzD,UAAsEA,EAAA,SAAMA,EAAA,SAA5E,wCAAuHA,EAAA,QAAMC,UAAU,sBAAhB,aAAvH,SAA2KD,EAAA,QAAMC,UAAU,qBAAhB,QAA3K,QAAwND,EAAA,QAAMC,UAAU,qBAAhB,QAAxN,iBAA8QD,EAAA,QAAMC,UAAU,qBAAhB,QAA9Q,YAA+TD,EAAA,SAA/T,oFAAsZA,EAAA,QAAMC,UAAU,qBAAhB,QAAtZ,UAAqcD,EAAA,SAArc,uFAA+hBA,EAAA,QAAMC,UAAU,qBAAhB,QAA/hB,UAA8kBD,EAAA,SAA9kB,uEAAwpBA,EAAA,QAAMC,UAAU,oBAAhB,uCAAgED,EAAA,SAAhE,gCAAxpB,UAAwwBA,EAAA,QAAMC,UAAU,qBAAhB,WAAxwB,OAAuzBD,EAAA,QAAMC,UAAU,sBAAhB,aAAvzB,eAAi3BD,EAAA,SAAMA,EAAA,SAAv3B,iBAA24BA,EAAA,SAAMA,EAAA,SAAj5B,WAA+5BA,EAAA,QAAMC,UAAU,sBAAhB,UAA/5B,2BAAk+BD,EAAA,QAAMC,UAAU,sBAAhB,UAAl+B,WAAqhCD,EAAA,QAAMC,UAAU,qBAAhB,SAArhC,QAAmkCD,EAAA,QAAMC,UAAU,sBAAhB,aAA8CD,EAAA,SAAjnC,8CAAkqCA,EAAA,SAAlqC,+CAAotCA,EAAA,SAAptC,uCAA8vCA,EAAA,QAAMC,UAAU,sBAAhB,SAA9vC,uCAA40CD,EAAA,QAAMC,UAAU,qBAAhB,QAA50C,0BAA24CD,EAAA,SAA34C,2BAAy6CA,EAAA,QAAMC,UAAU,qBAAhB,SAAz6C,gBAA+9CD,EAAA,SAA/9C,wGAA0kDA,EAAA,SAA1kD,2BAAwmDA,EAAA,QAAMC,UAAU,qBAAhB,SAAxmD,gBAA8pDD,EAAA,SAA9pD,4CAA6sDA,EAAA,SAA7sD,4EAA4xDA,EAAA,SAAMA,EAAA,SAAlyD,WAAgzDA,EAAA,SAAMA,EAAA,SAAtzD,kBAA20DA,EAAA,SAA30D,qCAAm3DA,EAAA,SAAn3D,6BAAm5DA,EAAA,QAAMC,UAAU,oBAAhB,uDAA8FD,EAAA,SAAj/D,6BAAihEA,EAAA,QAAMC,UAAU,qBAAhB,WAA2CD,EAAA,kBATxiEX,GACnBW,EAAA,OAAKC,UAAWZ,EAAMY,gBAAtB,EAAAC","file":"auto-canary.js","sourcesContent":["\n      \n      import path from 'path';\n      import React, { Component } from 'react';\n      import makeClass from 'classnames';\n\n      \n  import PropTypes from 'prop-types';\n\n  const getLocation = Location => ({\n    href: Location.href,\n    pathname: Location.pathname,\n    hash: Location.hash,\n    query: Location.query\n  });\n\n  const Link = props => {\n    let {to, ...rest} = props;\n\n    if (to.includes('http')) {\n      return <a {...props} href={to} />\n    }\n\n    if (to[0] === '#') {\n      to = path.join('/auto/','pages/auto-canary.html') + to;\n    }\n\n    return (\n      <a\n        {...rest}\n        href={to}\n        onClick={e => {\n          e.preventDefault();\n\n          if (props.to === '#') {\n            return false;\n          }\n\n          const location = new URL(path.join(window.location.origin, to))\n\n          window.history.pushState(getLocation(location), null, to);\n          props.onClick();\n\n          const popStateEvent = new CustomEvent('changeLocation', { detail: location });\n          dispatchEvent(popStateEvent);\n\n          return false;\n        }}\n      />\n    );\n  };\n\n  Link.defaultProps = {\n    href: '',\n    onClick: () => {}\n  };\n\n  Link.propTypes = {\n    href: PropTypes.string,\n    onClick: PropTypes.func\n  }\n\n      \n  const PluginProvider = ({plugins, name, options, children, ...props}) => {\n    let Plugin = plugins[name];\n    const pluginOptions = Plugin.options;\n\n    if (!Plugin) {\n      return <div />;\n    }\n\n    Plugin = Plugin.component;\n    return (\n      <Plugin\n        {...pluginOptions} \n        options={options ? options.options : {}}\n        {...(options ? options.props : props)}\n        children={children}\n        plugins={plugins}\n      />\n    );\n  };\n\n      \n  class Details extends Component {\n    state = {\n      open: this.props.open\n    }\n\n    render() {\n      return (\n        <details open={this.state.open}>\n          {this.props.children}\n        </details>\n      )\n    }\n  };\n\n      \n      \n    import IdealImage from 'react-ideal-image';\n\n    const imageSources = {  };\n\n    class LazyImageComponent extends React.Component {\n      state = {\n        image: null,\n        ImageProvider: imageSources[this.props.src]\n      }\n\n      componentDidMount() {\n        if (!this.state.image) {\n          this.state.ImageProvider().then(c => {\n            this.setState({\n              image: c.default\n            });\n          });\n        }\n      }\n\n      render() {\n        let { image } = this.state;\n\n        return image && typeof image === 'object' ? (\n          <IdealImage\n            {...this.props}\n            className={makeClass('image', this.props.className)}\n            src={image.src.src}\n            width={image.src.width || image.width}\n            height={image.src.height || image.height}\n            placeholder={{ lqip: image.preSrc }}\n            srcSet={image.src.images\n              ? image.src.images.map(i => ({\n                  ...i,\n                  src: i.path\n                }))\n              : [{\n                  src: image.src,\n                  width: image.width\n                }]\n            }\n          />\n        ) : <img className={makeClass('image', this.props.className)} src={image} />;\n      }\n    }\n  \n      \n  const lazyComponent = provider =>\n    class extends React.Component {\n      static defaultProps = {\n        shouldLoad: true\n      };\n  \n      state = {\n        Comp: null\n      };\n  \n      componentDidMount() {\n        if (!this.state.Comp && this.props.shouldLoad) {\n          provider().then(c => {\n            this.setState({\n              Comp: c.default\n            });\n          });\n        }\n      }\n  \n      render() {\n        const { Comp } = this.state;\n        return Comp ? React.createElement(Comp, this.props, this.props.children || null) : null;\n      }\n    };\n\n\n      const Gist = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-gist'))\n      const TweetEmbed = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-tweet-embed'))\n    \n      \n    const markDownPage = props => (\n      <div className={props.className}>\n        <section>\n          <h1><code>auto canary</code></h1>\n<p>Make a canary release of the project. Useful on PRs. If ran locally, <code>canary</code> will release a canary version for your current git HEAD.</p>\n<ol>\n<li>In PR: 1.2.3-canary.123.0 + add version to PR body</li>\n<li>Locally: 1.2.3-canary.1810cfd</li>\n</ol>\n<pre><code className=\"language-bash\">&gt; auto canary -h<br /><br />Options<br /><br />  -d, --dry-run          Report what <span className=\"hljs-built_in\">command</span> will <span className=\"hljs-keyword\">do</span> but <span className=\"hljs-keyword\">do</span> not actually <span className=\"hljs-keyword\">do</span> anything<br />  --pr number            PR number to use to create the canary version. Detected <span className=\"hljs-keyword\">in</span> CI env<br />  --build string         Build number to use to create the canary version. Detected <span className=\"hljs-keyword\">in</span> CI env<br />  -m, --message string   Message to comment on PR with. Defaults to <span className=\"hljs-string\">'Published PR with canary version:<br />                         %v'</span>. Pass <span className=\"hljs-literal\">false</span> to <span className=\"hljs-built_in\">disable</span> the comment<br /><br />Global Options<br /><br />  -h, --<span className=\"hljs-built_in\">help</span>            Display the <span className=\"hljs-built_in\">help</span> output <span className=\"hljs-keyword\">for</span> the <span className=\"hljs-built_in\">command</span><br />  -v, --verbose         Show some more logs<br />  -w, --very-verbose    Show a lot more logs<br />  --repo string         The repo to <span className=\"hljs-built_in\">set</span> the status on. Defaults to looking <span className=\"hljs-keyword\">in</span> the package definition<br />                        <span className=\"hljs-keyword\">for</span> the platform<br />  --owner string        The owner of the GitHub repo. Defaults to reading from the package definition<br />                        <span className=\"hljs-keyword\">for</span> the platform<br />  --github-api string   GitHub API to use<br />  --plugins string[]    Plugins to load auto with. (defaults to just npm)<br /><br />Examples<br /><br />  $ auto canary<br />  $ auto canary --pr 123 --build 5<br />  $ auto canary --message <span className=\"hljs-string\">\"Install PR version: &#96;yarn add -D my-project@%v&#96;\"</span><br />  $ auto canary --message <span className=\"hljs-literal\">false</span><br /></code></pre>\n\n        </section>\n      </div>\n    );\n\n    export default markDownPage;\n  \n    "],"sourceRoot":""}