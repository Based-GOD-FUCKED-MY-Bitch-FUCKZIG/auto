{"version":3,"sources":["webpack:///./docs/pages/auto-shipit.md"],"names":["_path","_interopRequireDefault","__webpack_require__","_react","_interopRequireWildcard","Link","props","to","rest","_objectWithoutProperties","includes","default","createElement","_extends","href","path","join","onClick","e","preventDefault","location","URL","window","origin","history","pushState","Location","pathname","hash","query","getLocation","popStateEvent","CustomEvent","detail","dispatchEvent","defaultProps","lazyComponent","provider","_class","_temp","React","Component","[object Object]","args","super","_defineProperty","this","Comp","componentDidMount","state","shouldLoad","then","c","setState","render","children","bind","_jsx","className","_ref3","_ref4","_ref5","currentPage","_ref6","_ref7","id","aria-hidden","_ref8"],"mappings":"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","file":"auto-shipit.js","sourcesContent":["\n      \n      import path from 'path';\n      import React, { Component } from 'react';\n      import makeClass from 'classnames';\n\n      \n  import PropTypes from 'prop-types';\n\n  const getLocation = Location => ({\n    href: Location.href,\n    pathname: Location.pathname,\n    hash: Location.hash,\n    query: Location.query\n  });\n\n  const Link = props => {\n    let {to, ...rest} = props;\n\n    if (to.includes('http')) {\n      return <a {...props} href={to} />\n    }\n\n    if (to[0] === '#') {\n      to = path.join('/auto/','pages/auto-shipit.html') + to;\n    }\n\n    return (\n      <a\n        {...rest}\n        href={to}\n        onClick={e => {\n          e.preventDefault();\n\n          if (props.to === '#') {\n            return false;\n          }\n\n          const location = new URL(path.join(window.location.origin, to))\n\n          window.history.pushState(getLocation(location), null, to);\n          props.onClick();\n\n          const popStateEvent = new CustomEvent('changeLocation', { detail: location });\n          dispatchEvent(popStateEvent);\n\n          return false;\n        }}\n      />\n    );\n  };\n\n  Link.defaultProps = {\n    href: '',\n    onClick: () => {}\n  };\n\n  Link.propTypes = {\n    href: PropTypes.string,\n    onClick: PropTypes.func\n  }\n\n      \n  const PluginProvider = ({plugins, name, options, children, ...props}) => {\n    let Plugin = plugins[name];\n    const pluginOptions = Plugin.options;\n\n    if (!Plugin) {\n      return <div />;\n    }\n\n    Plugin = Plugin.component;\n    return (\n      <Plugin\n        {...pluginOptions} \n        options={options ? options.options : {}}\n        {...(options ? options.props : props)}\n        children={children}\n        plugins={plugins}\n      />\n    );\n  };\n\n      \n  class Details extends Component {\n    state = {\n      open: this.props.open\n    }\n\n    render() {\n      return (\n        <details open={this.state.open}>\n          {this.props.children}\n        </details>\n      )\n    }\n  };\n\n      \n      \n    import IdealImage from 'react-ideal-image';\n\n    const imageSources = {  };\n\n    class LazyImageComponent extends React.Component {\n      state = {\n        image: null,\n        ImageProvider: imageSources[this.props.src]\n      }\n\n      componentDidMount() {\n        if (!this.state.image) {\n          this.state.ImageProvider().then(c => {\n            this.setState({\n              image: c.default\n            });\n          });\n        }\n      }\n\n      render() {\n        let { image } = this.state;\n\n        return image && typeof image === 'object' ? (\n          <IdealImage\n            {...this.props}\n            className={makeClass('image', this.props.className)}\n            src={image.src.src}\n            width={image.src.width || image.width}\n            height={image.src.height || image.height}\n            placeholder={{ lqip: image.preSrc }}\n            srcSet={image.src.images\n              ? image.src.images.map(i => ({\n                  ...i,\n                  src: i.path\n                }))\n              : [{\n                  src: image.src,\n                  width: image.width\n                }]\n            }\n          />\n        ) : <img className={makeClass('image', this.props.className)} src={image} />;\n      }\n    }\n  \n      \n  const lazyComponent = provider =>\n    class extends React.Component {\n      static defaultProps = {\n        shouldLoad: true\n      };\n  \n      state = {\n        Comp: null\n      };\n  \n      componentDidMount() {\n        if (!this.state.Comp && this.props.shouldLoad) {\n          provider().then(c => {\n            this.setState({\n              Comp: c.default\n            });\n          });\n        }\n      }\n  \n      render() {\n        const { Comp } = this.state;\n        return Comp ? React.createElement(Comp, this.props, this.props.children || null) : null;\n      }\n    };\n\n\n      const Gist = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-gist'))\n      const TweetEmbed = lazyComponent(() => import(/* webpackChunkName: \"plugin-embed\" */ 'react-tweet-embed'))\n    \n      \n    const markDownPage = props => (\n      <div className={props.className}>\n        <section>\n          <h1><code>auto shipit</code></h1>\n<p>Run the full <code>auto</code> release pipeline. Will detect if in a lerna project and publish accordingly. If ran from a PR build, <code>shipit</code> publish a canary release using <Link currentPage={(this && this.props || props).currentPage} to=\"/auto/pages/auto-canary.html\"><code>auto canary</code></Link>.</p>\n<pre><code className=\"language-sh\">auto shipit<br /></code></pre>\n<h2 id=\"options\">Options <Link currentPage={(this && this.props || props).currentPage} className=\"fas fa-hashtag headerLink\" to=\"#options\" aria-hidden=\"true\"></Link></h2>\n<pre><code className=\"language-sh\"><br />$ auto shipit --<span className=\"hljs-built_in\">help</span><br /><br />Options<br /><br />  -d, --dry-run    Report what <span className=\"hljs-built_in\">command</span> will <span className=\"hljs-keyword\">do</span> but <span className=\"hljs-keyword\">do</span> not actually <span className=\"hljs-keyword\">do</span> anything<br /><br />Global Options<br /><br />  -h, --<span className=\"hljs-built_in\">help</span>            Display the <span className=\"hljs-built_in\">help</span> output <span className=\"hljs-keyword\">for</span> the <span className=\"hljs-built_in\">command</span><br />  -v, --verbose         Show some more logs<br />  -w, --very-verbose    Show a lot more logs<br />  --repo string         The repo to <span className=\"hljs-built_in\">set</span> the status on. Defaults to looking <span className=\"hljs-keyword\">in</span> the package definition <span className=\"hljs-keyword\">for</span> the platform<br />  --owner string        The owner of the GitHub repo. Defaults to reading from the package definition <span className=\"hljs-keyword\">for</span> the platform<br />  --github-api string   GitHub API to use<br />  --base-branch string  Branch to treat as the <span className=\"hljs-string\">\"master\"</span> branch<br />  --plugins string[]    Plugins to load auto with. (defaults to just npm)<br /><br />Examples<br /><br />  $ auto shipit<br /></code></pre>\n\n        </section>\n      </div>\n    );\n\n    export default markDownPage;\n  \n    "],"sourceRoot":""}